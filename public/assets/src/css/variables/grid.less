// --------------------------------------------------
//== Grid System
// --------------------------------------------------
//	 â€¢ http://getbootstrap.com/css/#grid
//	 
//	 File Locations of Variables Used Below:
//	 	---- SELF CONTAINED ----


	// --------------------------------------------------
	// *** BREAKPOINTS *** 
	// --------------------------------------------------
	//## Define the breakpoints at which your layout will change, adapting to different screen sizes.
	
		// Extra Extra Small ... Flip Phones? We still develop for this aye?
		//** Deprecated `@screen-xxs` as of yr.1995
		@screen-xxs:									345px;
		//** Deprecated `@screen-xxs-min` as of yr.1995
		@screen-xxs-min:								@screen-xxs;
		//** Deprecated `@screen-phone` as of yr.1995
		@screen-flip-phone:								@screen-xxs-min;
		
		// Extra small screen / phone
		//** Deprecated `@screen-xs` as of v3.0.1
		@screen-xs:										480px;
		//** Deprecated `@screen-xs-min` as of v3.2.0
		@screen-xs-min:									@screen-xs;
		//** Deprecated `@screen-phone` as of v3.0.1
		@screen-phone:									@screen-xs-min;

		// Small screen / tablet
		//** Deprecated `@screen-sm` as of v3.0.1
		@screen-sm:										768px;
		@screen-sm-min:									@screen-sm;
		//** Deprecated `@screen-tablet` as of v3.0.1
		@screen-tablet:									@screen-sm-min;

		// Medium screen / desktop
		//** Deprecated `@screen-md` as of v3.0.1
		@screen-md:										992px;
		@screen-md-min:									@screen-md;
		//** Deprecated `@screen-desktop` as of v3.0.1
		@screen-desktop:								@screen-md-min;

		// Large screen / wide desktop
		//** Deprecated `@screen-lg` as of v3.0.1
		@screen-lg:										1200px;
		@screen-lg-min:									@screen-lg;
		//** Deprecated `@screen-lg-desktop` as of v3.0.1
		@screen-lg-desktop:								@screen-lg-min;

		// So media queries don't overlap when required, provide a maximum
		@screen-xs-max:									(@screen-sm-min - 1);
		@screen-sm-max:									(@screen-md-min - 1);
		@screen-md-max:									(@screen-lg-min - 1);



	// --------------------------------------------------
	//== Grid system
	// --------------------------------------------------
	//## Define your custom responsive grid.

		//** Number of columns in the grid.
		@grid-columns:									12;
		//** Padding between columns. Gets divided in half for the left and right.
		@grid-gutter-width:								@padding-base-horizontal;
		// Navbar collapse
		//** Point at which the navbar becomes uncollapsed.
		@grid-float-breakpoint:							@screen-sm-max;
		//** Point at which the navbar begins collapsing.
		@grid-float-breakpoint-max:						(@grid-float-breakpoint - 1);




	// --------------------------------------------------
	//== Container sizes
	// --------------------------------------------------
	//## Define the maximum width of `.container` for different screen sizes.

		// Small screen / tablet
		@container-tablet:								(720px + @grid-gutter-width);
		//** For `@screen-sm-min` and up.
		@container-sm:									@container-tablet;

		// Medium screen / desktop
		@container-desktop:								(940px + @grid-gutter-width);
		//** For `@screen-md-min` and up.
		@container-md:									@container-desktop;

		// Large screen / wide desktop
		@container-large-desktop:						(1140px + @grid-gutter-width);
		//** For `@screen-lg-min` and up.
		@container-lg:									@container-large-desktop;




	// --------------------------------------------------
	//== Reponsive Containers
	// --------------------------------------------------
	//## Define the widths and inner widths of containers
	
	// Element: <body>
		@body-width:				100%;
		@body-align:				null;

	// Elements: <header class="container">, <footer class="container">
		// 		- NOTE: Use the section-width-alt variety on one and section-width on the other if different 
		// 				widths are called for
		@section-width:				100%;
		@section-align:				'center';	//	Container Alignment - Left, Right, Center
		@section-inner-width:		90%;		//	.inner-container -  direct child of above element
		@section-inner-align:		'center';	//	Inner Container Alignment - Left, Right, Center

		@section-alt-width:			100%;
		@section-alt-align:			'center';	// Container Alignment - Left, Right, Center
		@section-alt-inner-width:	100%;		// .inner-container -  direct child of above element
		@section-alt-inner-align:	'center';	// Inner Container Alignment - Left, Right, Center


	// Element: <main class="container">
		@content-width:				90%;
		@content-align:				'center';
		@content-inner-width:		100%;
		@content-inner-align:		'center';

		@content-width-max:			1440px;		//	Add "-max" to the variable and include an extra parameter when 
												//	calling .grid-settings() mixin to set the max-width to said val
												//	 - Example: .grid-settings('content', true)


	// Custom Container Elements: .*-container Direct Descendants of <body>
		@full-width:				100%;
		@full-align:				'center';
		@full-inner-width:			100%;
		@full-inner-align:			'center';



	// --------------------------------------------------
	//== Content Containers Styling
	// --------------------------------------------------
	//## Styling of the Containers who's Dimensions are Set Above


	// Element: <nav class="sidebar-container">
		@sidebar-width:				15%;
		@sidebar-align:				'left';
		@sidebar-inner-width:		95%;
		@sidebar-inner-align:		'center';

		@sidebar-alt-width:			15%;
		@sidebar-alt-align:			'right';
		@sidebar-alt-inner-width:	95%;
		@sidebar-alt-inner-align:	'center';


	// --------------------------------------------------
	//== Containers Styling
	// --------------------------------------------------
	//## Styling of the Containers who's Dimensions are Set Above
	
		@body-bg-color:						@color-tertiary;
		@body-border-color:					transparent;
		@body-border-top:					0;
		@body-border-bottom:				0;
		@body-border-left:					0;
		@body-border-right:					0;

		@section-bg-color:					@color-main;
		@section-border-top:				0;
		@section-border-bottom:				0;
		@section-border-left:				0;
		@section-border-right:				0;

		@section-inner-bg-color:			@color-main;
		@section-inner-border-top:			0;
		@section-inner-border-bottom:		0;
		@section-inner-border-left:			0;
		@section-inner-border-right:		0;

		@content-bg-color:					transparent;
		@content-border-top:				0;
		@content-border-bottom:				0;
		@content-border-left:				0;
		@content-border-right:				0;

		@content-inner-bg-color:			transparent;
		@content-inner-border-top:			0;
		@content-inner-border-bottom:		0;
		@content-inner-border-left:			0;
		@content-inner-border-right:		0;

		@full-bg-color:						transparent;
		@full-border-top:					0;
		@full-border-bottom:				0;
		@full-border-left:					0;
		@full-border-right:					0;

		@full-inner-bg-color:				transparent;
		@full-inner-border-top:				0;
		@full-inner-border-bottom:			0;
		@full-inner-border-left:			0;
		@full-inner-border-right:			0;